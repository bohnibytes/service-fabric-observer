<?xml version="1.0" encoding="utf-8" ?>
<Settings xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.microsoft.com/2011/01/fabric">
	<Section Name="ObserverManagerConfiguration">
		<!-- Required: Amount of time, in seconds, to sleep before the next iteration of clusterobserver run loop. Internally, the run loop will sleep for 15 seconds if this
             setting is not greater than 0. -->
		<Parameter Name="ObserverLoopSleepTimeSeconds" Value="" MustOverride="true" />
		<!-- Required: Amount of time, in seconds, ClusterObserver is allowed to complete a run. If this time is exceeded, 
             then the offending observer will be marked as broken and will not run again. 
             Below setting represents 60 minutes. -->
		<Parameter Name="ObserverExecutionTimeout" Value="" MustOverride="true" />
		<!-- Required: Location on disk to store observer data, including ObserverManager. 
             ClusterObserver will write to its own directory on this path.
             **NOTE: For Linux runtime target, just supply the name of the directory (not a path with drive letter like you for Windows).** -->
		<Parameter Name="ObserverLogPath" Value="" MustOverride="true" />
		<!-- Required: Enabling this will generate noisy logs. Disabling it means only Warning and Error information 
             will be locally logged. This is the recommended setting. Note that file logging is generally
             only useful for FabricObserverWebApi, which is an optional log reader service that ships in this repo. -->
		<Parameter Name="EnableVerboseLogging" Value="" MustOverride="true" />
		<Parameter Name="ObserverFailureHealthStateLevel" Value="" MustOverride="true" />
		<Parameter Name="EnableETWProvider" Value="" MustOverride="true" />
		<Parameter Name="ETWProviderName" Value="" MustOverride="true" />
		<Parameter Name="EnableTelemetryProvider" Value="" MustOverride="true" />
		<Parameter Name="EnableOperationalTelemetry" Value="" MustOverride="true" />
		<Parameter Name="MaxArchivedLogFileLifetimeDays" Value="" MustOverride="true" />

		<!-- Telemetry - ApplicationInsights/LogAnalytics. NOTE: Values must now be set in ApplicationManifest.xml. This is a *breaking change* in version 3.2.14. -->

		<!-- Required - Telemetry Provider. Supported values are AzureApplicationInsights or AzureLogAnalytics. 
         NOTE: Value must now be set in ApplicationManifest.xml. This is a *breaking change* in version 3.2.14. -->
		<Parameter Name="TelemetryProvider" Value="" MustOverride="true" />

		<!-- Application Insights -->
		<!-- Required-If TelemetryProvider is AzureApplicationInsights. Your AppInsights Connection String. 
         NOTE: Value must now be set in ApplicationManifest.xml. This is a *breaking change* in version 3.2.14.-->
		<Parameter Name="AppInsightsConnectionString" Value="" MustOverride="true" />
		<!-- OBSOLETE. DO NOT USE. Use AppInsightsConnectionString instead. InstrumentationKey is no longer recommended for ApplicationInsights ingestion.
	     NOTE: Specifying this has no effect as ClusterObserver requires a ConnectionString for ApplicationInsights. -->
		<Parameter Name="AppInsightsInstrumentationKey" Value="" />

		<!-- LogAnalytics -->
		<!-- Required-If TelemetryProvider is AzureLogAnalytics. Your Workspace Id.
         NOTE: Values must now be set in ApplicationManifest.xml. This is a *breaking change* in version 3.2.14. -->
		<Parameter Name="LogAnalyticsWorkspaceId" Value="" MustOverride="true" />
		<!-- Required-If TelemetryProvider is AzureLogAnalytics. Your Shared Key. -->
		<Parameter Name="LogAnalyticsSharedKey" Value="" MustOverride="true" />
		<!-- Required-If TelemetryProvider is AzureLogAnalytics. Log scope. Default is Application. -->
		<Parameter Name="LogAnalyticsLogType" Value="" MustOverride="true" />
		<!-- End Telemetry Config -->

		<!-- Non-overridable. -->

		<Parameter Name="AsyncOperationTimeoutSeconds" Value="120" />
		
		<!-- Optional: Amount of time in seconds to wait before ObserverManager signals shutdown. -->
		<Parameter Name="ObserverShutdownGracePeriodInSeconds" Value="1" />
	</Section>
	<!-- ClusterObserver Configuration Settings. NOTE: These are overridable settings, see ApplicationManifest.xml. 
         The Values for these will be overriden by ApplicationManifest Parameter settings. Set DefaultValue for each
         overridable parameter in that file, not here, as the parameter DefaultValues in ApplicationManifest.xml will be used, by default. 
         This design is to enable unversioned application-parameter-only updates. This means you will be able to change
         any of the MustOverride parameters below at runtime by doing an ApplicationUpdate with ApplicationParameters flag. 
         See: https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-application-upgrade-advanced#upgrade-application-parameters-independently-of-version -->
	<Section Name="ClusterObserverConfiguration">
		<!-- Maximum amount of time to wait for an async operation to complete (e.g., any of the SF API calls..) -->
		<Parameter Name="AsyncOperationTimeoutSeconds" Value="" MustOverride="true" />
		<!-- Required: To enable or not enable, that is the question.-->
		<Parameter Name="Enabled" Value="" MustOverride="true" />
		<!-- Optional: Enabling this will generate noisy logs. Disabling it means only Warning and Error information 
             will be locally logged. This is the recommended setting. Note that file logging is generally
             only useful for FabricObserverWebApi, which is an optional log reader service that ships in this repo. -->
		<Parameter Name="EnableEtw" Value="" MustOverride="true"/>
		<Parameter Name="EnableVerboseLogging" Value="" MustOverride="true" />
		<Parameter Name="EnableTelemetry" Value="" MustOverride="true" />
		<!-- Optional: Emit health details for both Warning and Error for aggregated cluster health? 
             Aggregated Error evaluations will always be transmitted regardless of this setting. -->
		<Parameter Name="EmitHealthWarningEvaluationDetails" Value="" MustOverride="true" />
		<!-- Maximum amount of time a node can be in disabling/disabled/down state before
             emitting a Warning signal.-->
		<Parameter Name="MaxTimeNodeStatusNotOk" Value="" MustOverride="true" />
		<!-- How often to run ClusterObserver. This is a Timespan value, e.g., 00:10:00 means every 10 minutes, for example. -->
		<Parameter Name="RunInterval" Value="" MustOverride="true" />
		<!-- Report on currently executing Repair Jobs in the cluster. -->
		<Parameter Name="MonitorRepairJobs" Value="" MustOverride="true" />
		<!-- Monitor Cluster and Application Upgrades. -->
		<Parameter Name="MonitorUpgrades" Value="" MustOverride="true" />
	</Section>
	<!-- Plugin model sample. Just add the configuration info here that your observer needs.
         **NOTE**: You must name these Sections in the following way: [ObserverName]Configuration.
         Example: SampleNewObserverConfiguration, where SampleNewObserver is the type name of the observer plugin.
         See the SampleObserverPlugin project for a complete example of implementing an observer plugin. 
	   
         If you want to enable versionless, parameter-only application upgrades, then add MustOverride to the Parameters you want to be 
         able to change without redeploying CO and add them to ApplicationManifest.xml just like for ClusterObserver.
		 
  <Section Name="MyClusterObserverPluginConfiguration">
    <Parameter Name="Enabled" Value="true" />
    <Parameter Name="ClusterOperationTimeoutSeconds" Value="120" />
    <Parameter Name="EnableEtw" Value="false" />
    <Parameter Name="EnableVerboseLogging" Value="false" />
    <Parameter Name="RunInterval" Value=""  />
  </Section> -->
</Settings>